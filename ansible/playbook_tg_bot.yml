---
- name: InstallPostgres
  hosts: pg_cluster
  tasks:
  - name: Add PostgreSQL apt key
    apt_key:
      url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
  - name: Add PostgreSQL repository
    apt_repository:
      repo: "deb http://apt.postgresql.org/pub/repos/apt/ {{ ansible_distribution_release }}-pgdg main"
  - name: Install PostgreSQL 14
    apt:
      name: postgresql-14
      update_cache: yes
      
- name: Configure PostgreSQL Master
  hosts: pg_master
  tasks:
    - name: Copy database configuration
      template:
        src: ./master/postgresql.conf
        dest: /etc/postgresql/14/main/postgresql.conf
        group: postgres
        mode: '0644'
        owner: postgres
      notify:
        - restart postgres

    - name: Copy user access configuration
      template:
        src: ./master/pg_hba.conf
        dest: /etc/postgresql/14/main/pg_hba.conf
        group: postgres
        mode: '0640'
        owner: postgres
      notify:
        - restart postgres

    - name: Install python
      apt:
        name: python3
        state: present
    - name: Install pip
      apt:
        name: python3-pip
        state: present
    - name: Make sure psycopg2 is installed
      pip:
        name: psycopg2-binary
        state: present

    - name: add database
      become: yes
      become_user: postgres
      postgresql_db:
        name: db_phone_email
        state: present
        login_user: postgres

    - name: Copy init.sql
      template:
        src: ./master/init.sql
        dest: /home/init.sql

    - name: Run init.sql
      become: yes
      become_user: postgres
      command: psql -U postgres -d db_phone_email -f /home/init.sql

    - name: set directory and file permissions
      file:
        path: /var/log/postgresql
        recurse: yes
        mode: "0755"

  handlers:
    - name: restart postgres
      service:
        name: postgresql
        state: restarted


- name: Configure PostgreSQL for replication
  hosts: pg_slave
  tasks:
    - name: Copy database configuration
      template:
        src: ./slave/postgresql.conf
        dest: /etc/postgresql/14/main/postgresql.conf
        group: postgres
        mode: '0644'
        owner: postgres
      notify:
        - restart postgres
    - name: Copy user access configuration
      template:
        src: ./slave/pg_hba.conf
        dest: /etc/postgresql/14/main/pg_hba.conf
        group: postgres
        mode: '0640'
        owner: postgres
      notify:
        - restart postgres

    - name: Stop PostgreSQL service
      service:
        name: postgresql
        state: stopped

    - name: Clean replica directory
      file:
        path: /var/lib/postgresql/14/main
        state: absent
      
    - name: Test replication configuration
      become: yes
      become_user: postgres
      command: pg_basebackup -R -h 192.168.194.130 -U repl_user -D /var/lib/postgresql/14/main -P
      environment:
        PGPASSWORD: "P@ssw0rd"
      ignore_errors: yes
      register: pg_basebackup_result
      until: pg_basebackup_result.rc == 0
      retries: 5
      delay: 5

    - name: Start PostgreSQL service
      service:
        name: postgresql
        state: started 
      
  handlers:
    - name: restart postgres
      service:
        name: postgresql
        state: restarted

- name: Bot
  hosts: bot_server
  tasks:
  
  - name: Install python
    apt:
      name: python3
      state: present


  - name: Install pip
    apt:
      name: python3-pip
      state: present

      
  - name: Clone repository with Python script
    git:
     repo: 'https://github.com/utoevon/devops_bot.git'
     dest: /tmp/repo_bot
     clone: yes
     version: ansible

  - name: Create directory
    ansible.builtin.file:
      path: /home/mpx/bot
      state: directory
      owner: mpx
      group: mpx
    
  - name: Copy Python script to bot server
    copy:
      src: /tmp/repo_bot/{{ item }}
      dest: /home/mpx/bot
      owner: mpx
      group: mpx
      remote_src: yes
    with_items:
      - devops_bot/code/bot.py
      - devops_bot/code/requirements.txt

  - name: Install from requirements.txt
    command: pip3 install -r /home/mpx/bot/requirements.txt
      
  - name: Копирование .env файла
    template:
      src: .env
      dest: /home/mpx/bot/.env
      owner: mpx
      group: mpx
      mode: '0644'

  - name: Run bot.py
    command: nohup python3 /home/mpx/bot/bot.py &
    args:
      chdir: /home/mpx/bot
      creates: /tmp/bot.lock
    async: 1
    poll: 0

